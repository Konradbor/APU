a = "smartfony Samsung"
save.image("~/Dokumenty/APU/1/e.RData")
remove(a)
load("~/Dokumenty/APU/1/e.RData")
reset
clean
cls
install.packages("gridExtra")
library(gridExtra)
help(package = "gridExtra")
g <- tableGrob(head(mtcars,10))
grid.draw(g)
library(grid)
grid.draw(g)
a <- seq(100,20,2)
seq(1)
seq(100,20)
seq(100,20,2)
seq(100,20,-2)
a <- seq(100,20,-2)
a
View(g)
View(g)
a <- seq(100,20,-4)
a
a <- seq(9,5)
a <- seq(11,16)
a <- seq(9,5)
b <- seq(11,16)
d <- b + a
d <- c(b, a)
d
nazwa <- c("Galaxy J2 Core (2020)",
"Galaxy Xcover FieldPro",
"Galaxy A2 Core",
"Galaxy View2",
"Galaxy M30",
"Galaxy M20",
"Galaxy M10",
"Galaxy Tab Advanced2",
"Galaxy Tab A 8.0 (2018)",
"Galaxy A6s",
"Galaxy A9 (2018)")
wyświetlacz <- c(5.0,
5.1,
5.0,
17.3,
6.4,
6.3,
6.22,
10.1,
8.0,
6.0,
6.3)
pamięć_RAM <- c(1,
4,
1,
3,
3,
3,
2,
3,
2,
6,
6)
pamieć_wbudowana <- c(
16GB,
64GB,
8GB,
64GB,
32GB,
32GB,
16GB,
32GB,
32GB,
64GB,
64GB
)
pamieć_wbudowana <- c(
16,
64,
8,
64,
32,
32,
16,
32,
32,
64,
64
)
aparat_foto <- c(8,
12,
5,
0,
13,
13,
13,
8,
8,
12,
24)
cena <- (80,
1020,
120,
660,
300,
300,
135,
200,
130,
300,
359)
cena <- c(80,
1020,
120,
660,
300,
300,
135,
200,
130,
300,
359)
liczba_opinii <- c(17,
48,
36,
50,
316,
358,
107,
8,
40,
86,
320)
ramka <- data.frame(wyświetlacz, pamięć_RAM, pamięć_wbudowana,
aparat_foto, cena, liczba_opinii)
ramka <- data.frame(wyświetlacz, pamięć_RAM, pamieć_wbudowana,
aparat_foto, cena, liczba_opinii)
ramka
ramka <- data.frame(nazwa, wyświetlacz, pamięć_RAM, pamieć_wbudowana,
aparat_foto, cena, liczba_opinii)
ramka
ramka[cena]
ramka$nazwa
ramka$cena
ave(ramka$cena)
mean(ramka$cena)
> nazwa <- c("Galaxy J2 Core (2020)",
+            "Galaxy Xcover FieldPro",
+            "Galaxy A2 Core",
+            "Galaxy View2",
+            "Galaxy M30",
+            "Galaxy M20",
+            "Galaxy M10",
+            "Galaxy Tab Advanced2",
+            "Galaxy Tab A 8.0 (2018)",
+            "Galaxy A6s")
ramka[-c(11),]
ramka <- ramka[-c(11),]
mean(ramka$cena)
ramka <- rbind(ramka, data.frame(nazwa = "Galaxy A9 (2018)", wyświetlacz = 6.3, pamięć_RAM = 6, pamieć_wbudowana = 64,
aparat_foto = 24, cena = 359, liczba_opinii = 320))
ramka
mean(ramka$cena)
smartfony$ocena <- factor(c(3, 5, 5, 4, 4, 4, 4, 5, 4.5, 5, 4.5))
ramka$ocena <- factor(c(3, 5, 5, 4, 4, 4, 4, 5, 4.5, 5, 4.5))
ramka
aggregate(ramka$cena, list(ramka$cena), mean)
mean(ramka$ocena)
mean(ramka$ocena/ramka$cena)
mean(as.numeric(ramka$ocena))
as.numeric(ramka$ocena)
as.integer(ramka$ocena)
levels(ramka$ocena)
levels(ramka$ocena)[ramka$ocena]
as.numeric(levels(ramka$ocena)[ramka$ocena])
mean(as.numeric(levels(ramka$ocena)[ramka$ocena]))
rbind(ramka, data.frame(nazwa = c("Galaxy A7 (2018)",
"Galaxy Note9",
"Galaxy J6+",
"Galaxy J4 Core",
),
wyświetlacz = c(6.0,6.4,6.0,6.0),
pamięć_RAM = c(4,6,3,1),
pamieć_wbudowana = c(64,128,32,16),
aparat_foto = c(12,12,10,5),
cena = c(309,820,230,150),
liczba_opinii = c(223,1243,198,87),
ocena = factor(c(4,5,4,3.5)))
)
rbind(ramka, data.frame(nazwa = c("Galaxy A7 (2018)",
"Galaxy Note9",
"Galaxy J6+",
"Galaxy J4 Core"
),
wyświetlacz = c(6.0,6.4,6.0,6.0),
pamięć_RAM = c(4,6,3,1),
pamieć_wbudowana = c(64,128,32,16),
aparat_foto = c(12,12,10,5),
cena = c(309,820,230,150),
liczba_opinii = c(223,1243,198,87),
ocena = factor(c(4,5,4,3.5)))
)
ramka <- rbind(ramka, data.frame(nazwa = c("Galaxy A7 (2018)",
"Galaxy Note9",
"Galaxy J6+",
"Galaxy J4 Core"
),
wyświetlacz = c(6.0,6.4,6.0,6.0),
pamięć_RAM = c(4,6,3,1),
pamieć_wbudowana = c(64,128,32,16),
aparat_foto = c(12,12,10,5),
cena = c(309,820,230,150),
liczba_opinii = c(223,1243,198,87),
ocena = factor(c(4,5,4,3.5)))
)
ramka
barplot(ramka)
barplot(ramka$ocena)
ramka$ocena
barplot(table(ramka$ocena))
library(plotrix)
install.packages("plotrix")
pie(ramka$ocena)
pie(as.numeric(levels(ramka$ocena)[ramka$ocena]))
prop.table(ramka$ocena)
prop.table(as.numeric(levels(ramka$ocena)[ramka$ocena]))
ramka$ocena / sum(ramka$ocena)
table (ramka$ocena)
table(ramka$ocena)
table(ramka$ocena) / sum(table(ramka$ocena))
prop.table(table(ramka$ocena))
pie(prop.table(table(ramka$ocena)))
fan.plot(prop.table(table(ramka$ocena)))
library(plotrix)
fan.plot(prop.table(table(ramka$ocena)))
fan.plot(table(ramka$ocena))
fan.plot(ramka$ocena)
fan.plot(as.numeric(levels(ramka$ocena)[ramka$ocena]))
fan.plot(prop.table(table(ramka$ocena)), names = prop.table(table(ramka$ocena)))
fan.plot(prop.table(table(ramka$ocena)), labels = prop.table(table(ramka$ocena)))
fan.plot(prop.table(table(ramka$ocena)), labels = table(ramka$ocena))
fan.plot(table(ramka$ocena), labels = table(ramka$ocena))
fan.plot(table(ramka$ocena), labels = table(ramka$ocena))
fan.plot(table(ramka$ocena), labels = ramka$ocena)
fan.plot(table(ramka$ocena), labels = as.numeric(levels(ramka$ocena)[ramka$ocena]))
table(ramka$ocena)
fan.plot(prop.table(table(ramka$ocena)), labels = as.numeric(levels(ramka$ocena)[ramka$ocena]))
fan.plot(prop.table(table(ramka$ocena)), labels = as.numeric(levels(ramka$ocena)[ramka$ocena]))
fan.plot(prop.table(table(ramka$ocena)), labels = names(prop.table(table(ramka$ocena))))
pie(prop.table(table(ramka$ocena)))
ifelse(ramka$ocena == 0, "nie ma",
ifelse(ramka$ocena < 50, "mniej niż 50 opinii",
ifelse(ramka$ocena <= 100, "50-100 opinii", "więcej niż 100 opinii)))
)
ifelse(ramka$ocena == 0, "nie ma",
+    ifelse(ramka$ocena < 50, "mniej niż 50 opinii",
+    ifelse(ramka$ocena <= 100, "50-100 opinii", "więcej niż 100 opinii)))
)
)
ifelse(ramka$ocena == 0, "nie ma",ifelse(ramka$ocena < 50, "mniej niż 50 opinii",ifelse(ramka$ocena <= 100, "50-100 opinii", "więcej niż 100 opinii)))
)
ifelse(ramka$ocena == 0, "nie ma",ifelse(ramka$ocena < 50, "mniej niż 50 opinii",ifelse(ramka$ocena <= 100, "50-100 opinii", "więcej niż 100 opinii))
ifelse(ramka$ocena == 0, "nie ma",ifelse(ramka$ocena < 50, "mniej niż 50 opinii",ifelse(ramka$ocena <= 100, "50-100 opinii", "więcej niż 100 opinii)
ifelse(ramka$ocena == 0, "nie ma",ifelse(ramka$ocena < 50, "mniej niż 50 opinii",ifelse(ramka$ocena <= 100, "50-100 opinii", "więcej niż 100 opinii")))
ifelse(ramka$liczba_opinii == 0, "nie ma",
ifelse(ramka$liczba_opinii < 50, "mniej niż 50 opinii",
ifelse(ramka$liczba_opinii <= 100, "50-100 opinii", "więcej niż 100 opinii")))
status_opinii <-
ifelse(ramka$liczba_opinii == 0, "nie ma",
ifelse(ramka$liczba_opinii < 50, "mniej niż 50 opinii",
ifelse(ramka$liczba_opinii <= 100, "50-100 opinii", "więcej niż 100 opinii")))
status_opinii <- status)_
status_opinii <- factor(status_opinii)
status_opinii
levels(status_opinii)
ramka <- rbind(ramka, data.frame(status_opinii)
ramka
ramka <- rbind(ramka, data.frame(status_opinii))
ramka <- rbind(ramka, status_opinii = data.frame(status_opinii))
ramka$status_opinii <- status_opinii
ramka
ramka
ramka
ramka
pie(prop.table(table(ramka$status_opinii)))
for (i in ramka) {
}
for (i in ramka) {
print(i)
}
for (i in ramka) {
print(i$nazwa)
}
for (i in ramka) {
print(i[1])
}
for (i in 1:nrow(ramka)) {
print(i[1])
}
for (i in 1:nrow(ramka)) {
print(i[1])
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(i[1])
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(row)
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(row$nazwa)
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
row$nazwa
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
row$nazwa
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(row$nazwa)
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(row$cena)
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(row$nazwa + " ma ocene klientow ")
}
warnings()
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(paste(row$nazwa, " ma ocene klientow "))
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(paste(row$nazwa, " ma ocene klientow ", row$ocena, " bo ma liczbę opinii ", row$liczba_opinii))
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(paste(row$nazwa, " ma ocene klientow", row$ocena, "bo ma liczbę opinii", row$liczba_opinii))
}
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(paste(row$nazwa, "ma ocene klientow", row$ocena, "bo ma liczbę opinii", row$liczba_opinii))
}
paste(ramka$nazwa)
paste(ramka$nazwa, ramka$ocena)
for (i in 1:nrow(ramka)) {
row <- ramka[i,]
print(paste(row$nazwa, "ma ocene klientow", row$ocena, "bo ma liczbę opinii", row$liczba_opinii))
}
write.csv(ramka, "smartfony.csv")
read.csv("smartfony.csv")
read.csv("smartfony.csv")
install.packages(yaml)
install.packages("yaml")
library(yaml)
write_yaml(ramka,"smartfony.yaml")
as.yaml(list(samples=split(replace(df, "name", NULL), df$name)))
as.yaml(list(samples=split(replace(ramka, "name", NULL), ramka$nazwa)))
as.yaml(list(samples=split(replace(ramka, "nazwa", NULL), ramka$nazwa)))
yaml <-    as.yaml(list(samples=split(replace(ramka, "nazwa", NULL), ramka$nazwa)))
cat(yaml)
save(yaml, file = "smartfony.yaml")
write(yaml, file = "smartfony.yaml")
